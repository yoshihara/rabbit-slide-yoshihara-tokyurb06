= "uwaaaa"から英文に変わったコミットログを見て自分の書き方をまとめてみた

:author
   よしはら
:theme
   clear-code
:allotted-time
   5m

= だれ？

* よしはら
  * 吉原　陽香
  * よし「はら」（not わら）
* @yshr04hrk
* GitHub: yoshihara

= だれ？

* 2011/いつか〜2013/06/28
  * 株式会社クリアコード（バイト含む）
* 現在無職
  * 7月から株式会社 万葉でバイト

= このLTでしゃべる事

* 今昔のコミットメッセージを出してみる
  * ×ログ　○メッセージ
* 昔と今の間になにがあったか
* コミットを書くときに考える事

= 昔のコミットメッセージ

* 研究時のコミット
  * 〜2012/03
  * gitでバージョン管理

= 学生の頃のコミットメッセージ

* "uwaaaa"？

= 実際

  * aaaa!

  # image
  # src = aaaa.png
  # relative_width = 100

= イマココ！

／(^o^)＼

= 他

  * もうちょっとましなのもあった

  # image
  # src = more.png
  # relative_width = 100

= 今（最近）

  * ranguba/packnga

  # image
  # src = now.png
  # relative_width = 100

= 今（最近）

  # image
  # src = clear-code-blog.png
  # relative_width = 60

(('tag:x-small'))http://www.clear-code.com/blog/2013/4/24.html

= "uwa(ry"から今までにあったこと

* クリアコード
  * コミットへのコメント

= コミットへのコメント？

(1) コミットする
(2) メーリングリストにコミットメールが流れる
(3) メールでコメントが来る\n（こともある）

= つまり

* コミットがすぐに読まれてコメントされる
  * コミットしたコード（diff）
  * コミットメッセージ

= 自分でも最近つくる

* yoshihara/evemacs
* yoshihara/grnline

= すると

* 「先生！ログが読みにくいです！」
  * 「このコミットメッセージの内容コミットしてなくない？」
  * 読んでもメッセージとdiffが結びつかない
  * 実際はやってたとしても

= どうしたいか

* コミットの内容を納得してもらう
* コミットで何をしたのかを誰かに伝える
  * メッセージ
  * diff

= 誰か？

* 他の人
* 先の自分

= 伝わらないと

((*コミットがイミフだと困る*))
\n
* コードはコミットでできていく
* このコードどうしてこうなった
    * 読んでも何したかわからない

= 実際の書き方

* 1行目と3行目以降に分けて説明
  * 2行目は空行

= 1行目

コミットの\n「見出し」

= 見出し？

* Q：このコミットは何目的よ？
* A：こういう目的のためですよ←ココ！

* 自問自答する

= 3行目以降

補足情報

= 補足？

* Q：このコミットは何目的よ？
* A：こういう目的のためですよ。というのも... ←ココ！

= 補足情報なので

* 1行目とdiffだけだとわかりにくいと感じたら書く
  * diffに書いてないことを書く
* 見出しだけで伝わるなら不要
  * 読むものを減らす

= 例えば

  * バグを直したよ！

  # image
  # src = now.png
  # relative_width = 100

= 例えば

* こんなバグ直したよ！
  * どういうときに起こるバグ？
  * 何が原因？
  * 再現のための情報
確かに直ったことを納得してもらう

= 例えば

  # image
  # src = clear-code-blog.png
  # relative_width = 60

(('tag:x-small'))http://www.clear-code.com/blog/2013/4/24.html

= 例えば

* typo直したよ！
  * どんなtypo？
    * 元の名前と似ているtypoはわかりにくい

確かに直していることを納得してもらう

= こうすることで

* 自分が何をしたかを随時記録
  * あとから思い出すのしんどい
* diffだけだとわかりにくいことをその場で記録
  * あとから思い出すの（ｒｙ

= なぜ記録する？

* ログはそのプロジェクトの状況を知るための情報
  * どんな機能が追加された・どういうふうに開発していった、etc...
* 後から見返したときの負担をなくす・減らす
  * 読みやすく・わかりやすく

= ありがとう\nございました
